/*
Namco 88

Quinty

*/

board <- {
	mappernum = 88, vram_mirrorfind = true, ppu_ramfind = false,
	cpu_romsize=1*mega
	cpu_banksize=0x2000
	ppu_romsize=1*mega
	ppu_banksize=0x400
	cpu_rom = {
		size_base = 0x10000, size_max = 1*mega,
		banksize = 0x2000
	},
	cpu_ram = {
		size_base = 0, size_max = 0, banksize = 0
	}
	ppu_rom = {
		size_base = 0x8000, size_max = 0x10000,
		banksize = 0x0400
	}
};
function cpu_dump(d, pagesize, banksize)
{
	for(local i = 0; i < pagesize - 2; i += 2){
		// cpu_write(d, 0x8000, [6, i, 7, i+1]);
                cpu_write(d, 0x8000, 6);
                cpu_write(d, 0x8001, i);
                cpu_write(d, 0x8000, 7);
                cpu_write(d, 0x8001, i + 1);
		cpu_read(d, 0x8000, banksize * 2);
	}
	cpu_read(d, 0xc000, banksize * 2);
}

function ppu_dump(d, pagesize, banksize)
{
	for(local i = 0; i < (pagesize>>1); i += 4){
                cpu_write(d, 0x8000, 0);
                cpu_write(d, 0x8001, i);
                cpu_write(d, 0x8000, 1);
                cpu_write(d, 0x8001, i+2);
		ppu_read(d, 0x0000, banksize * 4);
	}

	for(local i = 0; i < (pagesize>>1); i += 4){
	        cpu_write(d, 0x8000, 2);
                cpu_write(d, 0x8001, i);
                cpu_write(d, 0x8000, 3);
                cpu_write(d, 0x8001, i+1);
                cpu_write(d, 0x8000, 4);
                cpu_write(d, 0x8001, i+2);
                cpu_write(d, 0x8000, 5);
                cpu_write(d, 0x8001, i+3);
                ppu_read(d, 0x1000, banksize * 4);
	}

}
