board <- {
	mappernum = 76,
	cpu_romsize = 0x20000, cpu_banksize = 0x4000,
	ppu_romsize = 0x20000, ppu_banksize = 0x2000,
	ppu_ramfind = false, vram_mirrorfind = true
};

/*
Registers:
 ---------------------------
 Mask: $E001
 
   $8000:  [.... .AAA]
     A = Address for use with $8001
 
   $8001:  [..DD DDDD]    Data port:
       R:2 ->  CHR reg 0  (2k @ $0000)
       R:3 ->  CHR reg 1  (2k @ $0800)
       R:4 ->  CHR reg 2  (2k @ $1000)
       R:5 ->  CHR reg 3  (2k @ $1800)
       R:6 ->  PRG reg 0  (8k @ $8000)
       R:7 ->  PRG reg 1  (8k @ $a000)
 
 CHR Setup:
 ---------------------------
       $0000   $0400   $0800   $0C00   $1000   $1400   $1800   $1C00 
     +---------------+---------------+---------------+---------------+
     |      R:2      |      R:3      |      R:4      |      R:5      |
     +---------------+---------------+---------------+---------------+
 
 PRG Setup:
 ---------------------------
       $8000   $A000   $C000   $E000  
     +-------+-------+-------+-------+
     |  R:6  |  R:7  | { -2} | { -1} |
     +-------+-------+-------+-------+
*/



function cpu_dump(d, pagesize, banksize)
{
        for(local i = 0; i < (pagesize-1); i++){
		  cpu_write(d,0x8000,0x6 );
		  cpu_write(d,0x8001,(i*2)+0 );
		  cpu_write(d,0x8000,0x7 );
		  cpu_write(d,0x8001,(i*2)+1 );
		  cpu_read(d, 0x8000, 0x4000);
        }
	cpu_read(d, 0xC000, 0x4000);
}
function ppu_dump(d, pagesize, banksize)
{
	for(local i = 0; i < pagesize; i++){
		  cpu_write(d,0x8000,0x2 );
		  cpu_write(d,0x8001,(i*4)+0 );
		  cpu_write(d,0x8000,0x3 );
		  cpu_write(d,0x8001,(i*4)+1 );
		  cpu_write(d,0x8000,0x4 );
		  cpu_write(d,0x8001,(i*4)+2 );
		  cpu_write(d,0x8000,0x5 );
		  cpu_write(d,0x8001,(i*4)+3 );
		  ppu_read(d, 0, banksize);
	}
}
